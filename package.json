{
  "name": "local-classifieds",
  "version": "1.0.0",
  "description": "Monorepo for Local Classifieds project",
  "private": true,
  "workspaces": [
    "apps/*"
  ],
  "scripts": {
    "// === DEVELOPMENT ===": "",
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:frontend\"",
    "start:dev": "./scripts/start.sh",
    "dev:api": "npm run dev --workspace=apps/api",
    "dev:frontend": "npm run dev --workspace=apps/frontend",
    "// === PRODUCTION BUILD ===": "",
    "build": "npm run build --workspaces",
    "build:api": "npm run build --workspace=apps/api",
    "build:frontend": "npm run build --workspace=apps/frontend",
    "start": "concurrently \"npm run start:api\" \"npm run start:frontend\"",
    "start:api": "npm run start:prod --workspace=apps/api",
    "start:frontend": "npm run start --workspace=apps/frontend",
    "// === CODE QUALITY ===": "",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "lint:api": "npm run lint --workspace=apps/api",
    "lint:frontend": "npm run lint --workspace=apps/frontend",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:api": "npm run format --workspace=apps/api",
    "format:frontend": "npm run format --workspace=apps/frontend",
    "type-check": "tsc --noEmit",
    "type-check:api": "npm run type-check --workspace=apps/api",
    "type-check:frontend": "npm run type-check --workspace=apps/frontend",
    "// === TESTING ===": "",
    "test": "npm run test --workspaces",
    "test:watch": "npm run test:watch --workspaces",
    "test:cov": "npm run test:cov --workspaces",
    "test:api": "npm run test --workspace=apps/api",
    "test:frontend": "npm run test --workspace=apps/frontend",
    "test:e2e": "npm run test:e2e --workspace=apps/api",
    "// === DATABASE ===": "",
    "db:generate": "npm run db:generate --workspace=apps/api",
    "db:migrate": "npm run db:migrate --workspace=apps/api",
    "studio": "npm run db:studio --workspace=apps/api",
    "db:reset": "npm run db:reset --workspace=apps/api",
    "db:deploy": "npm run db:deploy --workspace=apps/api",
    "// === DOCKER ===": "",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart",
    "// === PROCESS MANAGEMENT ===": "",
    "stop": "npm run stop:all",
    "stop:all": "./scripts/stop.sh",
    "stop:api": "pkill -f 'nest start'",
    "stop:frontend": "pkill -f 'next dev'",
    "stop:docker": "docker-compose down",
    "stop:studio": "pkill -f 'prisma studio'",
    "// === CLEANUP ===": "",
    "clean": "npm run clean --workspaces",
    "clean:api": "npm run clean --workspace=apps/api",
    "clean:frontend": "npm run clean --workspace=apps/frontend",
    "// === GIT HOOKS ===": "",
    "prepare": "husky",
    "postinstall": "npm run db:generate",
    "precommit": "lint-staged",
    "prepush": "npm run lint && npm run type-check && npm run test",
    "// === QUALITY ASSURANCE ===": "",
    "quality": "npm run lint && npm run format:check && npm run type-check && npm run test && npm run build",
    "quality:fix": "npm run lint:fix && npm run format && npm run type-check",
    "ci": "npm run quality && npm run db:generate"
  },
  "devDependencies": {
    "@commitlint/cli": "^20.0.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/postcss": "^4.1.13",
    "@tailwindcss/typography": "^0.5.19",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "autoprefixer": "^10.4.21",
    "concurrently": "^8.2.2",
    "eslint": "^9.36.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "husky": "^9.1.7",
    "lint-staged": "^16.2.1",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "tailwindcss": "^4.1.13",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "apps/api/**/*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/frontend/**/*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
