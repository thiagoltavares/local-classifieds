{
  "info": {
    "name": "Category API",
    "description": "Collection for testing Category API endpoints with translation support",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "categorySlug",
      "value": "plumber",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Categories",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"slug\": \"plumber\",\n  \"displayOrder\": 10,\n  \"translations\": [\n    {\n      \"language\": \"pt\",\n      \"name\": \"Encanador\",\n      \"description\": \"Serviços de hidráulica e encanamentos\"\n    },\n    {\n      \"language\": \"en\",\n      \"name\": \"Plumber\",\n      \"description\": \"Plumbing and water services\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            },
            "description": "Create a new category with multiple translations"
          },
          "response": []
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            },
            "description": "Get all active categories"
          },
          "response": []
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            },
            "description": "Get a specific category by ID"
          },
          "response": []
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"displayOrder\": 15,\n  \"translations\": [\n    {\n      \"language\": \"pt\",\n      \"name\": \"Encanador Profissional\",\n      \"description\": \"Serviços profissionais de hidráulica\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            },
            "description": "Update category information and translations"
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            },
            "description": "Soft delete a category (set active = false)"
          },
          "response": []
        }
      ],
      "description": "Category CRUD operations"
    }
  ],
  "event": [
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-extract category ID from create responses",
          "if (pm.response && pm.response.json && pm.response.json.id) {",
          "    pm.collectionVariables.set('categoryId', pm.response.json.id);",
          "    console.log('Category ID set to:', pm.response.json.id);",
          "}",
          "",
          "// Basic response validation",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has valid JSON', function () {",
          "    pm.response.to.have.jsonBody();",
          "});"
        ]
      }
    }
  ]
}
